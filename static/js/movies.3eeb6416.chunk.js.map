{"version":3,"sources":["Component/MoviePreview.js","Component/MovieList.js","views/Movies.js"],"names":["MoviePreview","poster","title","vote","src","width","alt","withRouter","movies","location","match","map","movie","to","pathname","id","state","from","poster_path","vote_average","Movies","query","handleChange","event","setState","currentTarget","value","handlSubmit","preventDefault","Axios","get","then","data","results","className","onSubmit","this","type","onChange","autoComplete","autoFocus","placeholder","Component"],"mappings":"2IAeeA,EAdM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACrC,OACE,gCACE,qBACEC,IAAG,yCAAoCH,GACvCI,MAAM,MACNC,IAAI,KAEN,6BAAKJ,IACL,4BAAIC,QCaKI,iBAlBG,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAeC,GAAe,EAAtBC,MAAsB,EAAfD,UAClC,OACE,6BACGD,EAAOG,KAAI,SAACC,GAAD,OACV,6BACE,cAAC,IAAD,CAASC,GAAI,CAACC,SAAS,UAAD,OAAYF,EAAMG,IAAMC,MAAO,CAACC,KAAMR,IAA5D,SACE,cAAC,EAAD,CACER,OAAQW,EAAMM,YACdhB,MAAOU,EAAMV,MACbC,KAAMS,EAAMO,kBALTP,EAAMG,a,0JCLFK,E,4MACnBJ,MAAQ,CACNK,MAAO,GACPb,OAAQ,I,EAIVc,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,MAAOE,EAAME,cAAcC,S,EAG7CC,YAAc,SAACJ,GACbA,EAAMK,iBAEWC,IAAMC,IAAN,kHACwF,EAAKd,MAAMK,MADnG,gCAEfU,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAc,EAAKR,SAAS,CAAChB,OAAQwB,EAAKC,aAC/C,EAAKT,SAAS,CAAEH,MAAO,M,4CAG3B,WACE,OACE,yBAAQa,UAAU,cAAlB,UACE,uBAAMA,UAAU,aAAaC,SAAUC,KAAKT,YAA5C,UACE,uBACEO,UAAU,mBACVG,KAAK,OACLX,MAAOU,KAAKpB,MAAMK,MAClBiB,SAAUF,KAAKd,aACfiB,aAAa,MACbC,WAAS,EACTC,YAAY,kBAEd,wBAAQJ,KAAK,SAASH,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,yBAIF,6BAIC,cAAC,IAAD,CAAW1B,OAAQ4B,KAAKpB,MAAMR,kB,GA1CLkC","file":"static/js/movies.3eeb6416.chunk.js","sourcesContent":["import React from \"react\";\nconst MoviePreview = ({ poster, title, vote }) => {\n  return (\n    <div>\n      <img\n        src={`https://image.tmdb.org/t/p/w185${poster}`}\n        width=\"200\"\n        alt=\"\"\n      />\n      <h5>{title}</h5>\n      <p>{vote}</p>\n    </div>\n  );\n};\n\nexport default MoviePreview;\n","import React from \"react\";\r\n\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport MoviePreview from \"./MoviePreview\";\r\n\r\nconst MovieList = ({ movies, match, location }) => {\r\n  return (\r\n    <ul>\r\n      {movies.map((movie) => (\r\n        <li key={movie.id}>\r\n          <NavLink to={{pathname: `movies/${movie.id}`, state: {from: location}}}>\r\n            <MoviePreview\r\n              poster={movie.poster_path}\r\n              title={movie.title}\r\n              vote={movie.vote_average}\r\n            />\r\n          </NavLink>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default withRouter(MovieList);\r\n","import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport MovieList from \"../Component/MovieList\";\r\n\r\nexport default class Movies extends Component {\r\n  state = {\r\n    query: \"\",\r\n    movies: [],\r\n  };\r\n\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ query: event.currentTarget.value });\r\n  };\r\n\r\n  handlSubmit = (event) => {\r\n    event.preventDefault();\r\n    \r\n    const response = Axios.get(\r\n  `https://api.themoviedb.org/3/search/movie?api_key=ee059677e8bdbcfa281a4ce6304abcdd&language=en-US&query=${this.state.query}&page=1&include_adult=false`\r\n    ).then(({ data }) => this.setState({movies: data.results}));\r\n      this.setState({ query: \"\" });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchmovie\">\r\n        <form className=\"SearchForm\" onSubmit={this.handlSubmit}>\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search movies\"\r\n          />\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n        </form>\r\n        \r\n          <ul>\r\n            {/* {this.state.movies.map((movie) => (\r\n              <li key={movie.id}>{movie.title}</li>\r\n            ))} */}\r\n           <MovieList movies={this.state.movies} />\r\n          </ul>\r\n        \r\n      </header>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}